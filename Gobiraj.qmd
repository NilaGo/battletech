---
title: "Gobiraj"
author: "Nila Gobiraj"
format: html
---

# Initialisation

```{r}
#Packages Installation
#| message: FALSE
library(here)
library(vroom) 
library(dplyr)
library(tidyr)
library(ggplot2)
# Data loading
here::i_am("battletech.Rproj")

```

# Question - 2

### Link to GitHub Repository

https://github.com/NilaGo/battletech.git \
# Question - 3 - Data Loading

```{r}
# Main data set
main<-vroom(here("data","data_systems.csv"),col_types = c("n","c","n","n","n","n","n","c"))
#Verifications
main|>summarise("Data loading is successful"= (n()==1030))
main|>select(where(is.numeric))
```

# Question 4
```{r}
knitr::kable(main |> summarise("number of obs" = nrow(main),"number of variables"=ncol(main)))

main |>
  mutate("missing variables " = across(everything(), ~ sum(is.na(.))))|>slice_head()|>
  knitr::kable()


main |>
  mutate("missing variables " = across(everything(), ~ sum(is.na(.))>1))|>slice_head()|>
  knitr::kable()
```

# Question 5 
```{r}
main|>select(`STAR RADIUS`,`Effective Temperature`)|>
  filter(`Effective Temperature`!=is.na(`Effective Temperature`),`STAR RADIUS`!=is.na(`STAR RADIUS`))|>
  ggplot(aes(x=`STAR RADIUS`,y=`Effective Temperature`))+
  geom_point()+
  labs(title="Temporature in function of radius",x="radius",y="temperature")
```
# Question 6 
```{r}
#Distance
 main |>
  select(star_name, `Distance (Lightyears)`) |>
  arrange(`Distance (Lightyears)`) |>
  filter(`Distance (Lightyears)` == min(`Distance (Lightyears)`) | 
         `Distance (Lightyears)` == max(`Distance (Lightyears)`))
# Temperature
 main |>
  select(star_name, `Effective Temperature`) |>
   filter(`Effective Temperature`!=is.na(`Effective Temperature`))|>
  arrange(`Effective Temperature`) |>
  filter(`Effective Temperature` == min(`Effective Temperature`) | 
         `Effective Temperature` == max(`Effective Temperature`))
 # Relative Mass
 main |>
  select(star_name, `Relative Mass`) |>
  filter(`Relative Mass`!=is.na(`Relative Mass`))|>
  arrange(`Relative Mass`) |>
  filter(`Relative Mass` == min(`Relative Mass`) | 
         `Relative Mass` == max(`Relative Mass`))
 # Star Radius
 main |>
  select(star_name, `STAR RADIUS`) |>
  arrange(`STAR RADIUS`) |>
  filter(`STAR RADIUS` == min(`STAR RADIUS`) | 
        `STAR RADIUS` == max(`STAR RADIUS`))
 # Luminosity
  main |>
  select(star_name, `Star Luminosity`) |>
      filter(`Star Luminosity`!=is.na(`Star Luminosity`))|>
  arrange(`Star Luminosity`) |>
  filter(`Star Luminosity` == min(`Star Luminosity`) | 
        `Star Luminosity` == max(`Star Luminosity`))
```
# Question 8

```{r}
Bt_faction<-vroom(here("data","BTFACTIONS.csv"),na="missing")
Bt_faction_sys<-vroom(here("data","BT_faction_system.csv"),na="missing")

```
# Question 9
```{r}
Bt_faction_sys|> filter(fkey=="A"|fkey=="U"|fkey=="I")|>
  group_by(fkey)|>
  summarise("number of systems" = n())
    

```

# Question 10
```{r}
faction<-left_join(main,Bt_faction_sys,by="Star_code")
knitr::kable(faction|>summarise("number of missing stars"=sum(is.na(fkey))))
```

